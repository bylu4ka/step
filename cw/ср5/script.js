// ## Завдання 1.

// Створити об'єкт користувача, який має три властивості:

// - Ім'я
// - Прізвище
// - Професія

// А також одним методом sayHi, який виводить у консоль повідомлення 'Привіт.'.

// ## Завдання 2.

// Розширити функціонал об'єкта з попереднього завдання:

// - Метод sayHi має вивести повідомлення: «Привіт. Мене звуть <Ім'я Прізвище>.»;
// - Додати метод, який змінює значення вказаної властивості об'єкта.

// Просунута складність:

// - Метод має бути «розумним» — він генерує помилку при
//   здійснення спроби зміни значення неіснуючого в об'єкті властивості.

const person = {
  name: "John",
  surname: "Blackwood",
  job: "carpenter",
  sayHi() {
    console.log(`Привіт. Мене звуть ${this.name} ${this.surname}. `);
  },
  changeValueProperty: function (propertyName, propertyValue) {
    if (Object.hasOwn(this, propertyName)) {
      this[propertyName] = propertyValue;
    } else {
      alert("ERROR");
    }
  },
};

person.sayHi();
person.name = "Vasya";
person.changeValueProperty("jobs", 0);
console.log(person);

// ## Завдання 3.

// Розширити функціонал об'єкта з попереднього завдання:

// - Додати метод, який додає об'єкту нову властивість із зазначеним
//   значенням.

// Просунута складність:

// - Метод має бути «розумним» — він генерує помилку при
//   створення нової властивості властивість з таким ім'ям вже існує.

// ## Завдання 4.

// - За допомогою циклу for...in вивести в консоль усі властивості
// - першого рівня об'єкта у форматі "ключ-значення".

// Просунута складність:

// - Переписати цикл так, щоб він умів виводити властивості об'єкта другого рівня
//   вкладеності.

// ## Завдання 5.

// Напишіть функцію, яка робить поверхневу перевірку об'єкта на порожнечу.

// Опис завдання: Напишіть функцію, яка робить поверхневу перевірку об'єкт на порожнечу.

// - Очікуваний результат: ({}) => true, ({ a: undefined }) => true, ({ a: 1 }) =>
//   false
//   Порожні значення: '', null, NaN, undefined
//   Складність завдання: 2 of 5
//   @param {Object} object - об'єкт із примітивами
//   @returns {boolean}

//         export const isEmpty = (object) => {
//             // Напишіть тут своє рішення
//         };

// ### Завдання 6.

// Напишіть функцію, яка поверхово знаходить перетин об'єктів і повертає об'єкт перетинів.

// Опис завдання: Напишіть функцію, яка поверхово знаходить перетину об'єктів та повертає об'єкт перетинів.

// Очікуваний результат: ({ a: 1, b: 2 }, { c: 1, b: 2 }) => { b: 2 }
// @param {Object<string | number>} firstObj - об'єкт із примітивними значеннями
// @param {Object<string | number>} secondObj - об'єкт із примітивними значеннями
// @returns {Object}

//     export const intersection = (firstObject, secondObject) => {
//         // Напишіть тут своє рішення
//     };

//     const data = {a: 1, b: 2}; const data2 = {c: 1, b: 2};
//     console.log(intersection(data, data2)); // {b: 2}

// ## Завдання 7

// Напишіть функцію, яка створюватиме об'єкти, що описують товари. У товару
// повинні бути такі властивості:

// - name;
// - fullName;
// - article;
// - ціна. При цьому при спробі безпосередньо (через точку) змінити властивість price
//   відбувається його перевірка на прравильність: ціна має бути цілим
//   позитивним числом. Якщо ці вимоги порушуються – присвоєння не
//   станеться. Створювати його аналог через "price не можна".

// Приклад роботи:

//     const notebook = createProduct("lenovo X120S", "lenovo X120S (432-44) W", 3332, 23244);

//     console.log(notebook.price); // виведе 23244

//     notebook.price = -4; // Присвоєння не відбудеться

//     console.log(notebook.price); // виведе 23244

//     notebook.price = 22000;

//     console.log(notebook.price); // виведе 22000
